AWSTemplateFormatVersion: 2010-09-09
Resources: 
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: MyVPC2fromCF
  
  Mysubnet01:
    Type: AWS::EC2::Subnet
    Properties:
     VpcId: !Ref MyVPC
     AvailabilityZone: ap-northeast-1a
     CidrBlock: 10.0.0.0/24
     MapPublicIpOnLaunch: true
     Tags:
       - Key: Name
         Value: aws-studyCF-subnet01
  Mysubnet02:
    Type: AWS::EC2::Subnet
    Properties:
     VpcId: !Ref MyVPC
     AvailabilityZone: ap-northeast-1c
     CidrBlock: 10.0.1.0/24
     Tags:
       - Key: Name
         Value: aws-studyCF-subnet02         

  EC2secGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: awsstudyCF-sg
      GroupDescription: true
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: aws-studyCF-EC2secGroup
  
  RDSsecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: awsstudyCF-rdssg
      GroupDescription: true
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: aws-studyCF-RDSsecGroup
  
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: ayoan
      DisableApiTermination: true
      ImageId: ami-095af7cb7ddb447ef
      InstanceType: t2.micro
      SubnetId: !Ref Mysubnet01
      SecurityGroupIds: 
       - !Ref EC2secGroup
      Tags:
        - Key: Name
          Value: aws-studyCF-EC2insatance
  
  MyInternetGateway:
   Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
   Type: AWS::EC2::RouteTable
   Properties:
    VpcId: !Ref MyVPC

  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Mysubnet01  
      RouteTableId: !Ref MyRouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Mysubnet02  
      RouteTableId: !Ref MyRouteTable


  MyDBsubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
     DBSubnetGroupDescription: "My DB subnet group"
     SubnetIds: 
      - !Ref Mysubnet01
      - !Ref Mysubnet02
     DBSubnetGroupName: rds-ec2-db-subnetgroup 

  MyrdsDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t4g.micro
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      AvailabilityZone: ap-northeast-1a
      BackupRetentionPeriod: 0
      DBInstanceIdentifier: aws-study
      DBName: awsstudy
      DBSubnetGroupName: !Ref MyDBsubnetGroup
      Engine: mysql
      EngineVersion: 8.0.39
      MasterUsername: root
      MasterUserPassword: !Ref DBPassword
      MultiAZ: false
      Port: 3306
      PubliclyAccessible: false
      StorageType: gp2
      VPCSecurityGroups:
        - Ref: RDSsecGroup
      Tags:
        - Key: Name
          Value: aws-studyCF-rdsinsatance

  MyELBname:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref EC2secGroup
      Subnets:
        - !Ref Mysubnet01
      Instances:
        - !Ref MyEC2Instance
      Listeners:
        - LoadBalancerPort: 80
          InstancePort: 8080
          Protocol: HTTP
          InstanceProtocol: HTTP
      HealthCheck:
        Target: "HTTP:8080/index.html" 
        HealthyThreshold: 5
        Interval: 30
        Timeout: 5
        UnhealthyThreshold: 2

Parameters:
  DBPassword:
    Type: String
    NoEcho: true